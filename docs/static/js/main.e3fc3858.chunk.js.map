{"version":3,"sources":["components/MarkersList/styles.module.css","components/BasicMap/styles.module.css","config/config.js","components/MarkersList/index.js","libs/utils.js","components/BasicMap/index.js","app/App.js","reportWebVitals.js","index.js"],"names":["module","exports","maptiler","url","attribution","center","lat","lng","zoomLevel","API","MarkersList","props","markers","length","className","styles","markerslist","map","item","icon","L","divIcon","classNames","markerslist__icon","html","count","Marker","position","id","getDist","layer","getCenter","eastBound","getBounds","getEast","centerEast","latLng","Math","round","distanceTo","getAreaStatistics","Promise","resolve","reject","Error","config","data","method","params","x","y","maxdist","geometry","axios","then","response","message","population_rs","catch","error","BasicMap","useState","setMapLayers","setMarkers","mapRef","useRef","editRef","addToast","useToasts","onCreate","e","a","layerType","_leaflet_id","layers","latlngs","getLatLngs","toString","appearance","autoDismiss","oldMarkers","Map","zoom","ref","FeatureGroup","onCreated","onEdited","_layers","Object","values","forEach","editing","l","onDeleted","filter","draw","rectangle","polyline","circle","circlemarker","marker","TileLayer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3fc3858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"markerslist\":\"styles_markerslist__2giCU\",\"markerslist__icon\":\"styles_markerslist__icon__3HREX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"styles_map__3o9Ln\",\"map__control__disabled\":\"styles_map__control__disabled__299ZE\"};","export default {\r\n  maptiler: {\r\n    url: 'http://tile.digimap.ru/rumap/{z}/{x}/{y}.png?guid=93BC6341-B35E-4B34-9DFE-26796F64BBB7',\r\n    attribution: '',\r\n  },\r\n  center: { lat: 57.152985, lng: 65.541227 },\r\n  zoomLevel: 10,\r\n  API: 'https://gis01.rumap.ru/4898/areaStatistics?guid=93BC6341-B35E-4B34-9DFE-26796F64BBB7',\r\n};\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport { Marker } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport styles from './styles.module.css';\r\n\r\nconst MarkersList = (props) => {\r\n  const { markers } = props;\r\n  if (markers.length === 0) return null;\r\n\r\n  const getMarkers = () => markers.map((item) => {\r\n    const icon = L.divIcon({\r\n      className: classNames(styles.markerslist__icon),\r\n      html: item.count || 0,\r\n    });\r\n    return <Marker key={item.id} icon={icon} position={item.position} />;\r\n  });\r\n\r\n  return (\r\n    <div className={styles.markerslist}>\r\n      {getMarkers()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarkersList;\r\n","import L from 'leaflet';\r\nimport axios from 'axios';\r\nimport config from '../config/config';\r\n\r\nexport const getDist = (layer) => {\r\n  const center = layer.getCenter();\r\n  const eastBound = layer.getBounds().getEast();\r\n  const centerEast = L.latLng(center.lat, eastBound);\r\n  return Math.round(center.distanceTo(centerEast));\r\n};\r\n\r\nexport const getAreaStatistics = (layer = null) => new Promise((resolve, reject) => {\r\n  if (!layer) return reject(new Error('Empty input data'));\r\n\r\n  const { API } = config;\r\n  const { lat: x, lng: y } = layer.getCenter();\r\n\r\n  const data = {\r\n    method: 'get',\r\n    url: API,\r\n    params: {\r\n      x, y, maxdist: getDist(layer), geometry: 0,\r\n    },\r\n  };\r\n\r\n  axios(data)\r\n    .then((response) => {\r\n      if ('code' in response.data) {\r\n        reject(new Error(response.data.message));\r\n      }\r\n      if ('population_rs' in response.data) {\r\n        resolve(response.data.population_rs);\r\n      }\r\n      resolve(0);\r\n    })\r\n    .catch((error) => {\r\n      reject(new Error('Error getting population count data'));\r\n    });\r\n\r\n  return false;\r\n});\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet';\r\nimport { EditControl } from 'react-leaflet-draw';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw.css';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport styles from './styles.module.css';\r\nimport config from '../../config/config';\r\nimport MarkersList from '../MarkersList';\r\nimport { getAreaStatistics } from '../../libs/utils';\r\n\r\nconst BasicMap = () => {\r\n  const [mapLayers, setMapLayers] = useState([]);\r\n  const [markers, setMarkers] = useState([]);\r\n  const mapRef = useRef();\r\n  const editRef = useRef();\r\n  const { addToast } = useToasts();\r\n\r\n  const onCreate = async (e) => {\r\n    const { layerType, layer } = e;\r\n    if (layerType === 'polygon') {\r\n      const { _leaflet_id } = layer;\r\n      setMapLayers((layers) => [...layers, { id: _leaflet_id, latlngs: layer.getLatLngs()[0] }]);\r\n      let count = 0;\r\n      try {\r\n        count = await getAreaStatistics(layer);\r\n      } catch (err) {\r\n        addToast(err.toString(), { appearance: 'error', autoDismiss: true });\r\n      }\r\n      setMarkers((oldMarkers) => [...oldMarkers, { id: _leaflet_id, position: layer.getCenter(), count }]);\r\n    }\r\n  };\r\n\r\n  const onEdited = (e) => {\r\n    const { layers: { _layers } } = e;\r\n\r\n    Object.values(_layers).forEach(async (layer) => {\r\n      const { _leaflet_id, editing } = layer;\r\n\r\n      let count = 0;\r\n      try {\r\n        count = await getAreaStatistics(layer);\r\n      } catch (err) {\r\n        addToast(err.toString(), { appearance: 'error', autoDismiss: true });\r\n      }\r\n\r\n      setMapLayers((layers) => layers.map((l) => (\r\n        l.id === _leaflet_id\r\n          ? { ...l, latlngs: { ...editing.latlngs[0] } }\r\n          : l)));\r\n\r\n      setMarkers((oldMarkers) => oldMarkers.map((l) => {\r\n        if (l.id === _leaflet_id) {\r\n          return { ...l, position: layer.getCenter(), count };\r\n        }\r\n        return l;\r\n      }));\r\n    });\r\n  };\r\n\r\n  const onDeleted = (e) => {\r\n    const { layers: { _layers } } = e;\r\n\r\n    Object.values(_layers).forEach(({ _leaflet_id }) => {\r\n      setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id));\r\n      setMarkers((oldMarkers) => oldMarkers.filter((l) => l.id !== _leaflet_id));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Map center={config.center} zoom={config.zoomLevel} ref={mapRef} className={styles.map}>\r\n        <FeatureGroup>\r\n          <EditControl\r\n            position=\"topright\"\r\n            onCreated={onCreate}\r\n            onEdited={onEdited}\r\n            onDeleted={onDeleted}\r\n            draw={{\r\n              rectangle: false,\r\n              polyline: false,\r\n              circle: false,\r\n              circlemarker: false,\r\n              marker: false,\r\n            }}\r\n            ref={editRef}\r\n          />\r\n        </FeatureGroup>\r\n        <TileLayer\r\n          url={config.maptiler.url}\r\n          attribution={config.maptiler.attribution}\r\n        />\r\n        <MarkersList markers={markers} />\r\n      </Map>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicMap;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\nimport BasicMap from '../components/BasicMap';\r\n\r\nfunction App() {\r\n  return (\r\n    <ToastProvider>\r\n      <BasicMap />\r\n    </ToastProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'normalize.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}